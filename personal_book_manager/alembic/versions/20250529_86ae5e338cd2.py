"""add cover_url column

Revision ID: 86ae5e338cd2
Revises: e36897055520
Create Date: 2025-05-29 13:42:05.630676

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '86ae5e338cd2'
down_revision = 'e36897055520'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('revoked_tokens')
    op.alter_column('books', 'status',
               existing_type=postgresql.ENUM('WANT_TO_READ', 'READING', 'FINISHED', 'UNREAD', name='bookstatus'),
               nullable=True)
    op.drop_constraint('books_isbn_key', 'books', type_='unique')
    op.drop_constraint('uq_books_isbn', 'books', type_='unique')
    op.drop_column('books', 'updated_at')
    op.drop_column('books', 'created_at')
    op.drop_column('books', 'notes')
    op.drop_column('books', 'published_date')
    op.drop_column('books', 'isbn')
    op.drop_column('books', 'pages')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('books', sa.Column('pages', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('books', sa.Column('isbn', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('books', sa.Column('published_date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('books', sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('books', sa.Column('created_at', sa.DATE(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('books', sa.Column('updated_at', sa.DATE(), autoincrement=False, nullable=True))
    op.create_unique_constraint('uq_books_isbn', 'books', ['isbn'])
    op.create_unique_constraint('books_isbn_key', 'books', ['isbn'])
    op.alter_column('books', 'status',
               existing_type=postgresql.ENUM('WANT_TO_READ', 'READING', 'FINISHED', 'UNREAD', name='bookstatus'),
               nullable=False)
    op.create_table('revoked_tokens',
    sa.Column('jti', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('jti', name='revoked_tokens_pkey')
    )
    # ### end Alembic commands ###
